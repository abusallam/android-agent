# üõ°Ô∏è Android Agent AI - Complete Docker Infrastructure
# Includes LiveKit Server, COTURN, PostgreSQL, Redis, and the PWA Dashboard

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: android-agent-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: android_agent_db
      POSTGRES_USER: android_agent
      POSTGRES_PASSWORD: secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - android-agent-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U android_agent -d android_agent_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Session Store
  redis:
    image: redis:7-alpine
    container_name: android-agent-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - android-agent-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # COTURN Server for WebRTC NAT Traversal
  coturn:
    image: coturn/coturn:4.6.2-alpine
    container_name: android-agent-coturn
    restart: unless-stopped
    command: |
      -n
      --log-file=stdout
      --external-ip=$$(detect-external-ip)
      --listening-port=3478
      --alt-listening-port=3479
      --tls-listening-port=5349
      --alt-tls-listening-port=5350
      --min-port=49152
      --max-port=65535
      --fingerprint
      --lt-cred-mech
      --user=androidagent:coturn_password_2024
      --realm=android-agent.local
      --server-name=android-agent.local
      --log-binding
      --no-cli
      --no-tls
      --no-dtls
      --stale-nonce=600
      --max-bps=3000000
    ports:
      # STUN/TURN ports
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "3479:3479/udp"
      - "3479:3479/tcp"
      # TLS ports
      - "5349:5349/udp"
      - "5349:5349/tcp"
      - "5350:5350/udp"
      - "5350:5350/tcp"
      # Media relay ports (UDP)
      - "49152-65535:49152-65535/udp"
    networks:
      - android-agent-network
    environment:
      - DETECT_EXTERNAL_IP=yes
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3478"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LiveKit Server for WebRTC Media
  livekit:
    image: livekit/livekit-server:v1.5.2
    container_name: android-agent-livekit
    restart: unless-stopped
    command: --config /etc/livekit.yaml
    ports:
      - "7880:7880"  # WebRTC
      - "7881:7881"  # TURN
      - "7882:7882"  # HTTP API
    networks:
      - android-agent-network
    volumes:
      - ./livekit/livekit.yaml:/etc/livekit.yaml:ro
      - livekit_data:/data
    environment:
      - LIVEKIT_CONFIG=/etc/livekit.yaml
    depends_on:
      - redis
      - coturn
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7880/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Android Agent PWA Dashboard
  android-agent:
    build:
      context: ./modern-dashboard
      dockerfile: Dockerfile
    container_name: android-agent-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - android-agent-network
    environment:
      # Database
      - DATABASE_URL=postgresql://android_agent:secure_password_2024@postgres:5432/android_agent_db
      
      # Authentication
      - NEXTAUTH_SECRET=android-agent-super-secure-jwt-secret-key-production-2024
      - NEXTAUTH_URL=http://localhost:3000
      - JWT_SECRET=android-agent-jwt-signing-key-production-2024
      
      # Application
      - NODE_ENV=production
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
      
      # LiveKit Configuration
      - LIVEKIT_URL=ws://livekit:7880
      - LIVEKIT_API_KEY=android-agent-api-key-2024
      - LIVEKIT_API_SECRET=android-agent-api-secret-2024-very-secure
      - NEXT_PUBLIC_LIVEKIT_URL=ws://localhost:7880
      
      # Redis
      - REDIS_URL=redis://:redis_password_2024@redis:6379
      
      # PWA Configuration
      - ENABLE_BACKGROUND_SYNC=true
      - LOCATION_SYNC_INTERVAL=300000
      - DEVICE_SYNC_INTERVAL=600000
      
      # Intelligence Features
      - ENABLE_AI_FEATURES=true
      - AI_ANALYSIS_INTERVAL=600000
      
      # Security
      - SECURE_HEADERS=true
    volumes:
      - app_data:/app/data
    depends_on:
      - postgres
      - redis
      - livekit
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: android-agent-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - android-agent-network
    depends_on:
      - android-agent
      - livekit
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  android-agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  livekit_data:
    driver: local
  app_data:
    driver: local