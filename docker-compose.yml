version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: android-agent-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: android_agent_db
      POSTGRES_USER: android_agent
      POSTGRES_PASSWORD: secure_android_agent_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - android-agent-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U android_agent -d android_agent_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Sessions and Caching
  redis:
    image: redis:7-alpine
    container_name: android-agent-redis
    restart: unless-stopped
    command: redis-server --requirepass secure_redis_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - android-agent-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Modern Android Agent PWA
  android-agent:
    build:
      context: ./modern-dashboard
      dockerfile: Dockerfile
    container_name: android-agent-pwa
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: "postgresql://android_agent:secure_android_agent_2024@postgres:5432/android_agent_db"
      
      # Security
      NEXTAUTH_SECRET: "super-secure-secret-key-change-in-production-2024"
      NEXTAUTH_URL: "http://localhost:3000"
      
      # Redis
      REDIS_URL: "redis://:secure_redis_2024@redis:6379"
      
      # PWA Configuration
      NEXT_PUBLIC_WS_URL: "ws://localhost:3000"
      ENABLE_BACKGROUND_SYNC: "true"
      LOCATION_SYNC_INTERVAL: "300000"
      DEVICE_SYNC_INTERVAL: "600000"
      
      # Security Headers
      SECURE_HEADERS: "true"
      
      # Production Settings
      NODE_ENV: "production"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - android-agent-network
    volumes:
      - app_data:/app/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Legacy Android Agent (Optional - for migration)
  legacy-agent:
    build:
      context: ./server
      dockerfile: ../Dockerfile
    container_name: android-agent-legacy
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - SESSION_SECRET=legacy-secret-2024
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=secure_admin_2024
      - BCRYPT_ROUNDS=12
      - NODE_ENV=production
    ports:
      - "22533:22533"
    volumes:
      - ./server/clientData:/usr/src/app/clientData
    depends_on:
      - redis
    networks:
      - android-agent-network
    profiles:
      - legacy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_data:
    driver: local

networks:
  android-agent-network:
    driver: bridge